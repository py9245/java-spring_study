package secone_day;

public class second_day_02 {

	
}
//JVM 런타임 메모리 구조
//static 키워드
//package import
//접근제한자
//객체배열 활용 데이터 관리
//싱글턴 패턴 이해
//JVM java virtual Machine 자바 가상 머신 플랫폼 종속적
//GC garbage Collection 갈비지 컬렉터를 통해 자동으로 메모리를 관리, 사용되느 않는 객체 메모리 헤제

//메서드 영역(Method Area)
//클래스 정보를 저장하는 영역
//정적 변수, 상수, 메서드 등이 저장됨
//일부 JVM에 따라 GC가 관리해주는 경우도 있음
//모든 스레드가 공유
//클래스 로더(Class Loader)에 의해 클래스가 로드 될 때 저장되는 공간
//→ 회사의 매뉴얼(설계도) / 지침

//힙 영역(Heap Area)
//객체 인스턴스를 저장하는 공간
//GC가 관리하는 영역 (사용되지 않는 객체를 자동으로 삭제)
//인스턴스 변수, 배열 등이 해당 영역에 저장
//어플리케이션이 사용할 수 있는 가장 큰 메모리
//모든 스레드가 공유
//문자열 상수 풀 관리 (Java 7+)
//→ 프로젝트 자료 같은 것들
//--------------------------------
//static
//클래스 수준에서 공유되는 멤버(필드, 메서드, 중첩 클래스)를 정의하는 데 사용
//static 키워드를 작성하면 객체(인스턴스)와 무관하게 클래스 자체에 속함
//특정 객체에 속하지 않고 모든 객체가 동일한 static 멤버를 참조
//클래스의 이름을 통해 직접 호출 가능
//JVM 메서드 영역에 저장